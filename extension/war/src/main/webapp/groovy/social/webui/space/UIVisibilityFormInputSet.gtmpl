<%
import org.exoplatform.webui.form.UIFormRadioBoxInput ;
import org.exoplatform.web.application.JavascriptManager;
import org.exoplatform.webui.form.UIFormInputInfo;
import org.exoplatform.social.core.space.model.Space;

def uicomponentId = uicomponent.id;
boolean isHidden = Space.HIDDEN.equals(uicomponent.getVisibility());

def rcontext = _ctx.getRequestContext() ;
def jsmanager = rcontext.getJavascriptManager();
jsmanager.require("SHARED/social-ui-customize-control", "customizeControl").addScripts('customizeControl.onLoad("' + uicomponentId + '");');
%>
<div class="uiSpaceVisibility" id="$uicomponentId">
    <div class="form-horizontal">
        <div class="control-group">
            <label class="control-label"><%=_ctx.appRes(uicomponent.getName() + ".label.UIVisibility")%>:</label>
            <div class="controls">
                <div class="spaceVisibility" style="margin-top:5px;margin-bottom:-5px;width:60px" onclick="<%=uicomponent.event('ChangeVisibility')%>">
                    <% if(isHidden) { %>
                        <input type="checkbox" class="yesno" checked="checked" style="visibility: hidden;">
                    <% }else { %>
                        <input type="checkbox" class="yesno" style="visibility: hidden;">
                    <% } %>
                </div>
            </div>
        </div>
		    <%
		      for(inputEntry in uicomponent.getChildren()) {
		        if(inputEntry.isRendered()) {
		    %>
        <div class="control-group">
           <%
            String label = _ctx.appRes(uicomponent.getName() + ".label." + inputEntry.getId()) ;
            if(!label.equals(inputEntry.getId()) && (inputEntry instanceof UIFormRadioBoxInput)) {
           %>
            <label class="control-label"><%=label%>:</label>
           <%} %>
            <div class="controls">
	                <%
	              if(inputEntry instanceof UIFormRadioBoxInput) {
	                  uicomponent.renderUIComponent(inputEntry) ;
	              } else if (!(inputEntry instanceof UIFormInputInfo)) {
	                uicomponent.renderUIComponent(inputEntry) ;
	              }
	              %>
            </div>
        </div>
	              <% }
	      } %>
    </div>
<script type="text/javascript">
    require(["SHARED/jquery", "SHARED/iphoneStyleCheckbox"], function (gj) {
        gj('div.uiSpaceVisibility').find("div.spaceVisibility").children('input:checkbox').each(function() {
            gj(this).iphoneStyle({
                disabledClass: 'switchBtnDisabled',
                containerClass: 'uiSwitchBtn',
                labelOnClass: 'switchBtnLabelOn',
                labelOffClass: 'switchBtnLabelOff',
                handleClass: 'switchBtnHandle',
                handleCenterClass: 'switchBtnHandleCenter',
                handleRightClass: 'switchBtnHandleRight',
                checkedLabel: '${_ctx.appRes("UISpaceVisibility.label.Yes")}',
                uncheckedLabel: '${_ctx.appRes("UISpaceVisibility.label.No")}'
            });
            gj(this).change(function() {
                gj(this).closest("div.spaceVisibility").trigger("click");
            });
        });
    });
</script>
</div>
<style>
#UIPopupAddSpace h5.title {
    display: none;
}
</style>